name: Auto add Issues to Project Backlog

on:
  issues:
    types: [opened]        # 新規Issueで発火
  workflow_dispatch:        # 手動実行（テスト用）

permissions:
  contents: read
  issues: read
  projects: write          # 必須

env:
  PROJECT_ID: "PVT_kwHOB9ZgFc4BAM-x"   # あなたの実プロジェクトID
  STATUS_FIELD_NAME: "Status"
  STATUS_OPTION_NAME: "Backlog"

jobs:
  route:
    runs-on: ubuntu-latest
    steps:
      - name: Pick token (PAT > GITHUB_TOKEN)
        id: tok
        run: |
          if [ -n "${{ secrets.PROJECTS_TOKEN }}" ]; then
            echo "token=${{ secrets.PROJECTS_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "token=${{ github.token }}" >> $GITHUB_OUTPUT
          fi

      - name: Add issue to Project and set Status=Backlog
        env:
          GH_TOKEN: ${{ steps.tok.outputs.token }}
        run: |
          set -euo pipefail
          issue_node='${{ github.event.issue.node_id }}'

          # Status/Backlog のID取得
          resp=$(gh api graphql -f query='query($p:ID!){
            node(id:$p){
              ... on ProjectV2 {
                fields(first:100){
                  nodes{
                    ... on ProjectV2SingleSelectField { id name options{ id name } }
                  }
                }
              }
            }
          }' -F p="$PROJECT_ID")

          status_field_id=$(echo "$resp" | jq -r --arg n "$STATUS_FIELD_NAME" '.data.node.fields.nodes[] | select(.name==$n) | .id')
          backlog_option_id=$(echo "$resp" | jq -r --arg n "$STATUS_FIELD_NAME" --arg o "$STATUS_OPTION_NAME" '.data.node.fields.nodes[] | select(.name==$n) | .options[] | select(.name==$o) | .id')

          # プロジェクトへ追加（既に入っていれば item_id は空になることがある）
          add=$(gh api graphql -f query='mutation($p:ID!, $c:ID!){
            addProjectV2ItemById(input:{projectId:$p, contentId:$c}){ item{ id } }
          }' -F p="$PROJECT_ID" -F c="$issue_node" || true)

          item_id=$(echo "$add" | jq -r '.data.addProjectV2ItemById.item.id // empty')
          if [ -z "$item_id" ]; then
            # 既存を拾い直す（100件まで）
            lookup=$(gh api graphql -f query='query($p:ID!){
              node(id:$p){
                ... on ProjectV2 {
                  items(first:100){ nodes{ id content{ ... on Issue { id } } } }
                }
              }
            }' -F p="$PROJECT_ID")
            item_id=$(echo "$lookup" | jq -r --arg i "$issue_node" '.data.node.items.nodes[] | select(.content.id==$i) | .id')
          fi
          [ -n "$item_id" ] || { echo "Project item not found or not added"; exit 1; }

          # Status = Backlog を設定
          gh api graphql -f query='mutation($p:ID!, $i:ID!, $f:ID!, $o:String!){
            updateProjectV2ItemFieldValue(input:{ projectId:$p, itemId:$i, fieldId:$f, value:{ singleSelectOptionId:$o } }){
              projectV2Item{ id }
            }
          }' -F p="$PROJECT_ID" -F i="$item_id" -F f="$status_field_id" -F o="$backlog_option_id"
